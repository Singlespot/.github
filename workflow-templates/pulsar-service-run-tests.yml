name: Run tests
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'requirements*.txt'
    - name: Create pip.conf file
      run: |
        mkdir -p ~/.pip
        echo "${{ secrets.SPT_PIP_CONF }}" > ~/.pip/pip.conf
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
# TODO: Restore tests
#    - name: Test with pytest
#      run: |
#        pytest
    - name: Set environment variables
      run: |
        VER=$(cat VERSION.txt)
        echo "VERSION=$VER" >> $GITHUB_ENV
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::268324876595:role/github-actions-role
        role-session-name: GitHubActions
        aws-region: ${{ vars.AWS_DEFAULT_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry: ${{ vars.SPT_ECR_REGISTRY }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        build-args: |
          "PIP_CONF=${{ secrets.SPT_PIP_CONF }}"
        push: true
        tags: |
          ${{ vars.SPT_ECR_REGISTRY }}/${{ env.PROJECT_NAME }}:latest
          ${{ vars.SPT_ECR_REGISTRY }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          ${{ vars.SPT_ECR_REGISTRY }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }}
#    - name: Deploy to Kubernetes
#      uses: helm/kubectl@v1.1.0
#      with:
#        command: apply
#        args: -f k8s/deployment.yaml
